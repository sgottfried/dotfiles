-- [nfnl] fnl/config/keybindings.fnl
local default_opts = {remap = false}
local wk = require("which-key")
wk.add({{"<leader>b", group = "buffer"}})
wk.add({{"<leader>d", group = "debugger"}})
wk.add({{"<leader>g", group = "Git"}})
wk.add({{"<leader>t", group = "Neotest"}})
vim.keymap.set("i", "jk", "<Esc>")
wk.add({{"-", ":Oil<CR>", desc = "Open parent directory"}})
wk.add({{"<leader>;", ":", desc = "desc"}})
wk.add({{"<leader><leader>", ":Telescope find_files<CR>", desc = "Telescope find files"}})
wk.add({{"<leader>bS", ":noa w<CR>", desc = "Save (without formatting)"}})
wk.add({{"<leader>bi", ":Telescope buffers<CR>", desc = "List buffers"}})
wk.add({{"<leader>bs", ":w<CR>", desc = "Save"}})
wk.add({{"<leader>c", ":copen<CR>", desc = "Open Quickfix"}})
wk.add({{"<leader>dd", ":DapContinue<CR>", desc = "Continue Debugging"}})
wk.add({{"<leader>di", ":DapStepInto<CR>", desc = "Step Into"}})
wk.add({{"<leader>do", ":DapStepOver<CR>", desc = "Step Over"}})
wk.add({{"<leader>gD", ":Gvdiffsplit!<CR>", desc = "Fugitive Merge"}})
wk.add({{"<leader>gd", ":Gvdiffsplit<CR>", desc = "Fugitive Diff"}})
wk.add({{"<leader>gg", ":G<CR>", desc = "Open Fugitive"}})
wk.add({{"<leader>hh", ":Telescope help_tags<CR>", desc = "Search Helptags"}})
wk.add({{"<leader>nj", ":Neorg journal today<CR>", desc = "Neorg journal for today"}})
wk.add({{"<leader>nm", ":MigrateYesterdayTasks<CR>", desc = "Neorg journal migrate tasks"}})
wk.add({{"gb", "DapToggleBreakpoint", desc = "toggle breakpoint"}})
local function _1_()
  local term_buf = vim.fn.bufnr("term://*")
  if (term_buf == ( - 1)) then
    return vim.cmd("botright split | resize 20 | terminal")
  else
    return vim.cmd(("botright split | resize 20 | buffer " .. term_buf))
  end
end
wk.add({{"<leader>ot", _1_, desc = "Open Terminal"}})
wk.add({{"<leader>s", ":Telescope live_grep<CR>", desc = "Search project"}})
local function _3_()
  return require("neotest").run.run({strategy = "dap"})
end
wk.add({{"<leader>td", _3_, desc = "debug test"}})
local function _4_()
  return require("neotest").run.run({jestCommand = "npx jest --coverage"})
end
wk.add({{"<leader>tt", _4_, desc = "run test under cursor"}})
local function _5_()
  return require("neotest").run.run(vim.fn.expand("%"))
end
wk.add({{"<leader>tf", _5_, desc = "test file"}})
wk.add({{"<leader>tw", "<cmd>lua require('neotest').run.run({ jestCommand = 'npx jest --watch ' })<cr>", desc = "run test watch"}})
wk.add({{"<leader>x", ":.lua<CR>", desc = "Execute Lua line"}})
wk.add({{"Y", "\"+y", desc = "Yank to system clipboard"}})
wk.add({{"w", group = "windows", proxy = "<c-w>"}})
vim.keymap.set("t", "<C-[", "<C-\\><C-n>", default_opts)
vim.keymap.set("t", "jk", "<C-\\><C-n>", default_opts)
vim.keymap.set("v", "<leader>x", ":lua<CR>", default_opts)
return vim.keymap.set("v", "Y", "\"+y", default_opts)
